class Solution {
public:
int f1(vector<int>& nums,int s,int e,int t){
    int mid=s+(e-s)/2;
    int ind=-1;
    while(s<=e){
       if(nums[mid]==t) {
           ind=mid;
           e=mid-1;
       }
       else if(nums[mid]>t){
           e=mid-1;
       }
       else s=mid+1;
       mid=s+(e-s)/2;

    }
    return ind;
}
int f2(vector<int>& nums,int s,int e,int t){
    int mid=s+(e-s)/2;
    int ind=-1;
    while(s<=e){
       if(nums[mid]==t) {
           ind=mid;
           s=mid+1;
       }
       else if(nums[mid]>t){
           e=mid-1;
       }
       else s=mid+1;
       mid=s+(e-s)/2;

    }
    return ind;
}
    vector<int> searchRange(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int>ans;
        ans.push_back(f1(nums,0,n-1,target));
        ans.push_back(f2(nums,0,n-1,target));
        return ans;
    }
};
