//Recursion + Memoisation
class Solution {
public:
int f(vector<vector<int>>& pairs,int prev,int curr,vector<vector<int>>&dp ){
    
    if(curr==pairs.size()) return 0;
    if(dp[curr][prev+1]!=-1) return dp[curr][prev+1];
    int include=0;
    int exclude=0;
    if(prev==-1||pairs[prev][1]<pairs[curr][0])
    include=1+f(pairs,curr,curr+1,dp);
    exclude=0+f(pairs,prev,curr+1,dp);
    int ans=max(include,exclude);
    return dp[curr][prev+1]=ans;

}
    int findLongestChain(vector<vector<int>>& pairs) {
        sort(begin(pairs),end(pairs));
        int n=pairs.size();
        vector<vector<int>>dp(n,vector<int>(n+1,-1));
       return f(pairs,-1,0,dp);
    }
};

//Tabulation
